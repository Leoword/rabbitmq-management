<div class="updatable">
<%
   var partitions = [];
   for (var i = 0; i < nodes.length; i++) {
     var node = nodes[i];
     if (node.partitions != undefined && node.partitions.length != 0) {
       partitions.push({'node': node.name,
                        'others': node.partitions});
     }
   }
   if (partitions.length > 0) {
%>
<p class="status-error">
  检测到网络分区<br/><br/>
  报告说，这个集群经历了网络分区。有丢失数据的风险。
</p>
<p>
分区的性质如下： 
</p>
  <table class="list">
    <tr>
      <th>节点</th><th>被划分为</th>
    </tr>

<%
   for (var i = 0; i < partitions.length; i++) {
     var partition = partitions[i];
%>
    <tr<%= alt_rows(i)%>>
      <td><%= fmt_node(partition.node) %></td>
      <td>
<%
   for (var j = 0; j < partition.others.length; j++) {
     var other = partition.others[j];
%>
          <%= other %><br/>
<% } %>
      </td>
    </tr>
<% } %>
  </table>
<p>
  在该分区状态下运行时，更改（如队列或在一个分区中发生的交换声明和绑定）将不会对其他分区可见，其他行为不是放心。
</p>
<% } %>
<%
   var ticktime = null;
   var ticktimes_unequal = false;
   for (var i = 0; i < nodes.length; i++) {
     var node_ticktime = nodes[i].net_ticktime;
     if (node_ticktime != undefined) {

       if (ticktime != null && node_ticktime != ticktime) {
         ticktimes_unequal = true;
       }
       ticktime = nodes[i].net_ticktime;
     }
   }
   if (ticktimes_unequal) {
%>
<p class="status-error">
  <code>内核</code> <code>心跳检测</code> 的值不同节点不同。
</p>
<p>
  值是：
</p>
  <table class="list">
    <tr><th>节点</th><th>心跳检测</th></tr>
<%
   for (var i = 0; i < nodes.length; i++) {
%>
      <tr<%= alt_rows(i)%>>
        <td><%= nodes[i].name %></td>
        <td><%= nodes[i].net_ticktime %></td>
      </tr>
<%
   }
%>
  </table>
<p>
  这是一种危险的配置；实质上的使用不平等的 <code>心跳检测</code> 值可以导致分区被错误地发现。
</p>
<%
   }
%>
</div>
